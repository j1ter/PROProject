{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniyal\\\\Documents\\\\GitHub\\\\PROProject\\\\client\\\\src\\\\components\\\\AppRouter.js\";\nimport { Routes, Route } from 'react-router-dom';\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  const isAuth = false; // замените на true, чтобы проверить маршруты из массива authRoutes\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: isAuth ? authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 60\n        }, this)\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this);\n    }) : publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 60\n        }, this)\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["Routes","Route","authRoutes","publicRoutes","jsxDEV","_jsxDEV","AppRouter","isAuth","children","map","_ref","path","Component","element","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","_c","$RefreshReg$"],"sources":["C:/Users/Daniyal/Documents/GitHub/PROProject/client/src/components/AppRouter.js"],"sourcesContent":["import { Routes, Route } from 'react-router-dom';\r\nimport { authRoutes, publicRoutes } from \"../routes\";\r\n\r\nconst AppRouter = () => {\r\n    const isAuth = false; // замените на true, чтобы проверить маршруты из массива authRoutes\r\n\r\n    return (\r\n        <Routes>\r\n            {isAuth ?\r\n                authRoutes.map(({ path, Component }) => (\r\n                    <Route key={path} path={path} element={<Component />} />\r\n                )) :\r\n                publicRoutes.map(({ path, Component }) => (\r\n                    <Route key={path} path={path} element={<Component />} />\r\n                ))\r\n            }\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,SAASC,UAAU,EAAEC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMC,MAAM,GAAG,KAAK,CAAC,CAAC;;EAEtB,oBACIF,OAAA,CAACL,MAAM;IAAAQ,QAAA,EACFD,MAAM,GACHL,UAAU,CAACO,GAAG,CAACC,IAAA;MAAA,IAAC;QAAEC,IAAI;QAAEC;MAAU,CAAC,GAAAF,IAAA;MAAA,oBAC/BL,OAAA,CAACJ,KAAK;QAAYU,IAAI,EAAEA,IAAK;QAACE,OAAO,eAAER,OAAA,CAACO,SAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI,GAAzCN,IAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAwC;IAAA,CAC3D,CAAC,GACFd,YAAY,CAACM,GAAG,CAACS,KAAA;MAAA,IAAC;QAAEP,IAAI;QAAEC;MAAU,CAAC,GAAAM,KAAA;MAAA,oBACjCb,OAAA,CAACJ,KAAK;QAAYU,IAAI,EAAEA,IAAK;QAACE,OAAO,eAAER,OAAA,CAACO,SAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI,GAAzCN,IAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAwC;IAAA,CAC3D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAED;AAEjB,CAAC;AAACE,EAAA,GAfIb,SAAS;AAiBf,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}